/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IngredientDTO } from './IngredientDTO';
import {
    IngredientDTOFromJSON,
    IngredientDTOFromJSONTyped,
    IngredientDTOToJSON,
    IngredientDTOToJSONTyped,
} from './IngredientDTO';

/**
 * 
 * @export
 * @interface RecipeDTO
 */
export interface RecipeDTO {
    /**
     * 
     * @type {string}
     * @memberof RecipeDTO
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof RecipeDTO
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof RecipeDTO
     */
    authorId: string;
    /**
     * 
     * @type {Array<IngredientDTO>}
     * @memberof RecipeDTO
     */
    ingredients: Array<IngredientDTO>;
}

/**
 * Check if a given object implements the RecipeDTO interface.
 */
export function instanceOfRecipeDTO(value: object): value is RecipeDTO {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('authorId' in value) || value['authorId'] === undefined) return false;
    if (!('ingredients' in value) || value['ingredients'] === undefined) return false;
    return true;
}

export function RecipeDTOFromJSON(json: any): RecipeDTO {
    return RecipeDTOFromJSONTyped(json, false);
}

export function RecipeDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecipeDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'description': json['description'],
        'authorId': json['authorId'],
        'ingredients': ((json['ingredients'] as Array<any>).map(IngredientDTOFromJSON)),
    };
}

export function RecipeDTOToJSON(json: any): RecipeDTO {
    return RecipeDTOToJSONTyped(json, false);
}

export function RecipeDTOToJSONTyped(value?: RecipeDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'description': value['description'],
        'authorId': value['authorId'],
        'ingredients': ((value['ingredients'] as Array<any>).map(IngredientDTOToJSON)),
    };
}

