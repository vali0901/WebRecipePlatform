/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';
import type { Ingredient } from './Ingredient';
import {
    IngredientFromJSON,
    IngredientFromJSONTyped,
    IngredientToJSON,
    IngredientToJSONTyped,
} from './Ingredient';

/**
 * 
 * @export
 * @interface Recipe
 */
export interface Recipe {
    /**
     * 
     * @type {string}
     * @memberof Recipe
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof Recipe
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Recipe
     */
    updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof Recipe
     */
    description: string;
    /**
     * 
     * @type {Array<Ingredient>}
     * @memberof Recipe
     */
    ingredients: Array<Ingredient>;
    /**
     * 
     * @type {User}
     * @memberof Recipe
     */
    author: User;
    /**
     * 
     * @type {string}
     * @memberof Recipe
     */
    authorId: string;
}

/**
 * Check if a given object implements the Recipe interface.
 */
export function instanceOfRecipe(value: object): value is Recipe {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('ingredients' in value) || value['ingredients'] === undefined) return false;
    if (!('author' in value) || value['author'] === undefined) return false;
    if (!('authorId' in value) || value['authorId'] === undefined) return false;
    return true;
}

export function RecipeFromJSON(json: any): Recipe {
    return RecipeFromJSONTyped(json, false);
}

export function RecipeFromJSONTyped(json: any, ignoreDiscriminator: boolean): Recipe {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'description': json['description'],
        'ingredients': ((json['ingredients'] as Array<any>).map(IngredientFromJSON)),
        'author': UserFromJSON(json['author']),
        'authorId': json['authorId'],
    };
}

export function RecipeToJSON(json: any): Recipe {
    return RecipeToJSONTyped(json, false);
}

export function RecipeToJSONTyped(value?: Recipe | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
        'description': value['description'],
        'ingredients': ((value['ingredients'] as Array<any>).map(IngredientToJSON)),
        'author': UserToJSON(value['author']),
        'authorId': value['authorId'],
    };
}

