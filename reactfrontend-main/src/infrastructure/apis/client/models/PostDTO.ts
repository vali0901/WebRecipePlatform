/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RecipeDTO } from './RecipeDTO';
import {
    RecipeDTOFromJSON,
    RecipeDTOFromJSONTyped,
    RecipeDTOToJSON,
    RecipeDTOToJSONTyped,
} from './RecipeDTO';
import type { UserDTO } from './UserDTO';
import {
    UserDTOFromJSON,
    UserDTOFromJSONTyped,
    UserDTOToJSON,
    UserDTOToJSONTyped,
} from './UserDTO';
import type { CommentDTO } from './CommentDTO';
import {
    CommentDTOFromJSON,
    CommentDTOFromJSONTyped,
    CommentDTOToJSON,
    CommentDTOToJSONTyped,
} from './CommentDTO';

/**
 * 
 * @export
 * @interface PostDTO
 */
export interface PostDTO {
    /**
     * 
     * @type {string}
     * @memberof PostDTO
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof PostDTO
     */
    description: string;
    /**
     * 
     * @type {number}
     * @memberof PostDTO
     */
    likes: number;
    /**
     * 
     * @type {string}
     * @memberof PostDTO
     */
    authorId: string;
    /**
     * 
     * @type {string}
     * @memberof PostDTO
     */
    recipeId: string;
    /**
     * 
     * @type {UserDTO}
     * @memberof PostDTO
     */
    author: UserDTO;
    /**
     * 
     * @type {RecipeDTO}
     * @memberof PostDTO
     */
    recipe: RecipeDTO;
    /**
     * 
     * @type {Array<CommentDTO>}
     * @memberof PostDTO
     */
    comments: Array<CommentDTO>;
}

/**
 * Check if a given object implements the PostDTO interface.
 */
export function instanceOfPostDTO(value: object): value is PostDTO {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('likes' in value) || value['likes'] === undefined) return false;
    if (!('authorId' in value) || value['authorId'] === undefined) return false;
    if (!('recipeId' in value) || value['recipeId'] === undefined) return false;
    if (!('author' in value) || value['author'] === undefined) return false;
    if (!('recipe' in value) || value['recipe'] === undefined) return false;
    if (!('comments' in value) || value['comments'] === undefined) return false;
    return true;
}

export function PostDTOFromJSON(json: any): PostDTO {
    return PostDTOFromJSONTyped(json, false);
}

export function PostDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'description': json['description'],
        'likes': json['likes'],
        'authorId': json['authorId'],
        'recipeId': json['recipeId'],
        'author': UserDTOFromJSON(json['author']),
        'recipe': RecipeDTOFromJSON(json['recipe']),
        'comments': ((json['comments'] as Array<any>).map(CommentDTOFromJSON)),
    };
}

export function PostDTOToJSON(json: any): PostDTO {
    return PostDTOToJSONTyped(json, false);
}

export function PostDTOToJSONTyped(value?: PostDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'description': value['description'],
        'likes': value['likes'],
        'authorId': value['authorId'],
        'recipeId': value['recipeId'],
        'author': UserDTOToJSON(value['author']),
        'recipe': RecipeDTOToJSON(value['recipe']),
        'comments': ((value['comments'] as Array<any>).map(CommentDTOToJSON)),
    };
}

